1. Does it make sense that childs (comments, reposts) inherit parent's rules config??? Always???
   i.e. is there a configuration of the parent, that should be applied to the child? (you can add more)
   precicely: is there a situation when the 1st degree comments should follow the root post rules, but the 2nd degree comments can ignore these?

> I wonder if this will make rules only allowed at "root posts" (normal post or quotes basically).

An example case that has all different types of rules and enforcements:


============================================
[[[[[[[[[[[[MAIN EXAMPLE SO FAR:]]]]]]]]]]]]
============================================
---

Root post:
- Competition! Please post your selfies here with a Poll rule, and then we will count the votes and the best will win!
  [ Rule: 1st degree childre should have a Poll in the reply. Pay to participate. ]
  - Reply 1: Selfie #1 [paid the root to participate]
    [ Rule: Poll for Selfie #1 (enforced by root). But doesn't have Pay to participate for below comments. ]
    - Reply 1.1: Nice hair!
      [ Rule: No rules ]
    - Reply 1.2: Nice hands!
      [ Rule: Only my followers can reply (self inflicted rule) ] << If you don't want this, you can add a whitelist in root post.

Example default rules:
- [I don't have any rules, but I also don't allow any rules to be added to children.]
- [I have this and that and follow to comment] && [I want all the childre to have the same rule, and nothing else]
- [I have or have not some rules] and I don't care and not enforce anything on children (do whatever).

---

==============================================================================

What implementation options do we have?

1. Very general and very non-opinionate. AKA: "What we have now" - onChange parents blahblah, check inheritance with MirrorRules or smth.
    > When I change the parent config, how do the child changes too...? :eyes: - This maybe flags a bad design for what we want to achieve, and the "go and execute from root's rules" is a better approach measured on this outcome at least...

    Maybe this is a good counterargument. But!
    We can have a rule that will say: Children must go and execute parents rules. - and enforce this on children.

    - We have `childPostRulesData` that is passed to the parent Rules for validation

    - Children enforcement configuration here is more done with some kind of Rules Combinators (hehe) that say: children must have this, etc

2. Have something like a flag on the Root post, that will say "children must go here and execute the root rules"
   - It can be a big flag - one for all the rules
   - It can be a flag inside each rule
   - it can be something else?

   - Do We have `childPostRulesData` that is passed to the parent Rules for validation?

   Cons here - it cannot enforce a rule that doesn't exist on Parent:
     - Like: "No replies at all" (beyond the first degree). Parent doesn't have this rule - so people can reply.
     But their replies are enforced to have this rule, so there cannot be sub-comments.
     - Alan comment on this: You can code this in the rule itself (if root => do this, if 1st degree from root => do that, if 2nd and else => do that-that)

   - But again - How do we disallow custom child rules and only allow the root rules?

   - Children enforcement configuration here is done by tweaking the code of the rules at the top, no combination/enforcing via rules is possible

3. Just always go to root and process its rules (in addition to child's own rules)
   - You cannot really "turn off" the root rules on childs if needed (unless you code turning off inside the rule itself) - see example above.
   - But again - How do we disallow custom child rules and only allow the root rules?

   - Do We have `childPostRulesData` that is passed to the parent Rules for validation???

   - Same, children enforcement configuration only through code modification of top root rules

4. Full Root-Dictator mode: You only allow rules on root posts. Period. Children just go to root and execute them.
   - Minus: We cannot have custom rules in the children. At all.

   - We don't have `childPostRulesData` thatr is passed to the parent Rules for validation

   - Someone who has "I only want to see my follower's comments" or "I only want to see IQ>100 comments" - this cannot be done here.


===============================================================================


2. Does it inherit it by processing all parent's rules, then processing child rules. Or we copy the rules array from parent? I guess the first approach (processing both) makes more sense because then if parent updates, you inherit directly to all childs. But also might need to be the root rules, not parent rules then...?
   Maybe should be a rule that says "Inherit/process all parent rules"??
   
   i.e. should we allow childs to add MORE rules to the parent rules, if we inherit parents?

   Yes. Imagine you always want to get paid for anyone who comments on you. That's your rule and you add it even if parent is not yours.
   Or if you only want MonkeyHolders to reply to your comments - you add it even if parent doesn't know anything about monkeys.
   Or if you only want your followers to reply - you add it even if parent doesn't know anything about your followers.

   TLDR: We should allow to add extra rules?
   Unless the parent specifically bans these guys from commenting (by not allowing certain rules).



3. Do we still need the hook onRulesChanged? On any of them? Global and local??
